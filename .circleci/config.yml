defaults:
  node_cache: &node_cache
    key: node_cache-{{ .Branch }}-{{ checksum "yarn.lock" }}-{{ checksum "package.json" }}
  build_cache: &build_cache
    key: build_cache-{{ .Branch }}-{{ epoch }}

version: 2

jobs:
  build:
    docker:
      - image: kkarczmarczyk/node-yarn
    steps:
      - checkout
      - restore_cache:
          <<: *node_cache
      - run:
          name: Dependencies
          command: yarn global add greenkeeper-lockfile@1
      - run:
          name: Install
          command: yarn
      - run:
          name: Update Lockfile
          command: greenkeeper-lockfile-update
      - run:
          name: Build
          command: yarn build
      - run:
          name: Upload Lockfile
          command: greenkeeper-lockfile-upload
      - run:
          name: Revert Lockfile
          command: git checkout yarn.lock
      - save_cache:
          <<: *node_cache
          paths:
            - ~/project/node_modules
      - save_cache:
          <<: *build_cache
          paths:
            - ~/project/dist
            - ~/project/esnext
  unit_test:
    docker:
      - image: kkarczmarczyk/node-yarn
    steps:
      - checkout
      - restore_cache:
          <<: *node_cache
      - run:
          name: Test
          command: yarn start ci
  release:
    docker:
      - image: kkarczmarczyk/node-yarn
    steps:
      - checkout
      - restore_cache:
          <<: *node_cache
      - restore_cache:
          key: build_cache-{{ .Branch }}
      - run:
          name: Release
          command: yarn start release || true
  release_to_presets:
    docker:
      - image: kkarczmarczyk/node-yarn
    steps:
      - checkout
      - restore_cache:
          <<: *node_cache
      - restore_cache:
          key: build_cache
      - run:
          name: Release to presets
          command: |
            git config --global user.email "ops@groupbyinc.com"
            git config --global user.name "GroupBy Ops"
            git config --global push.default simple

            git clone -b tmp/SF-954/next "https://${GH_TOKEN}@github.com/groupby/storefront-presets.git" ~/presets
            cd ~/presets

            git merge origin/tmp/SF-954/master --no-edit
            git submodule update --init

            component_name="${CIRCLE_PROJECT_REPONAME#storefront-}"

            git -C "components/${component_name}" checkout master
            component_version=$(git -C "components/${component_name}" describe --tags --abbrev=0)

            echo "Version in submodule: ${component_version}"

            # wait for NPM to catch up
            for ((i=0; i < 5; i++)); do
              npm_latest="$(yarn info -s "@storefront/${component_name}" dist-tags.latest)"
              echo "Version on NPM: ${npm_latest}"

              [[ "$component_version" = "v${npm_latest}" ]] && break

              echo "Version on NPM is behind. Waiting..."
              sleep 30
            done
            if ((i == 5)); then
              echo "Timed out. Aborting."
              exit 1
            fi

            yarn upgrade "@storefront/${component_name}@${component_version}"

            git add "components/${component_name}" package.json yarn.lock
            git commit -m "fix(package): update @storefront/${component_name} to ${component_version}" || true

            # other components may push to the branch in the meantime
            until git push; do
              sleep ${RANDOM:1:1}
              git pull --rebase
            done
  documentation:
    docker:
      - image: kkarczmarczyk/node-yarn
    steps:
      - checkout
      - restore_cache:
          <<: *node_cache
      - restore_cache:
          key: docs_cache-{{ .Branch }}
      - run:
          name: Documentation
          command: |
            set +e

            git config --global user.email "ops@groupbyinc.com"
            git config --global user.name "GroupBy Ops"
            git config --global push.default simple

            git remote rm origin
            git remote add origin "https://${GH_TOKEN}@github.com/groupby/${CIRCLE_PROJECT_REPONAME}.git"

            if [ -e component.docs.json ]; then
              mv component.docs.json old-component.docs.json
            else
              touch old-component.docs.json
            fi

            yarn docs:json
            DIFF=$(diff component.docs.json old-component.docs.json)
            if [ "$DIFF" != "" ]; then
              yarn docs
              git add docs
              git commit -m "docs: regenerate documentation" && git push -u origin master || true
            else
              echo "no change in generated documentation"
            fi
      - save_cache:
          key: docs_cache-{{ .Branch }}-{{ checksum "component.docs.json" }}-{{ epoch }}
          paths:
            - ~/project/component.docs.json

workflows:
  version: 2

  build_test_release:
    jobs:
      - build
      - unit_test:
          requires:
            - build
      - release:
          filters:
            branches:
              only: master
          requires:
            - unit_test
      - release_to_presets:
          filters:
            branches:
              only:
                - master
                - SF-954
          requires:
            - unit_test
      - documentation:
          filters:
            branches:
              only: master
          requires:
            - release
